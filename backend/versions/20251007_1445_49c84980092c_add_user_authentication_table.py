"""Add user authentication table

Revision ID: 49c84980092c
Revises: 
Create Date: 2025-10-07 14:45:59.682152+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '49c84980092c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False, comment='User unique identifier'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='Unique username for login'),
    sa.Column('email', sa.String(length=100), nullable=False, comment='User email address'),
    sa.Column('hashed_password', sa.String(length=255), nullable=False, comment='Bcrypt hashed password'),
    sa.Column('full_name', sa.String(length=100), nullable=True, comment="User's full name"),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether user account is active'),
    sa.Column('is_superuser', sa.Boolean(), nullable=False, comment='Whether user has admin privileges'),
    sa.Column('gemini_api_key', sa.String(length=500), nullable=True, comment="User's encrypted Gemini API key"),
    sa.Column('last_login_at', sa.DateTime(), nullable=True, comment='Last login timestamp'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_users_email'),
    sa.UniqueConstraint('username', name='uq_users_username')
    )
    op.create_index('idx_users_active', 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_active', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
