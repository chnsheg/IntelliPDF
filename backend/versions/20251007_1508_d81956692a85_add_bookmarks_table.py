"""Add bookmarks table

Revision ID: d81956692a85
Revises: 49c84980092c
Create Date: 2025-10-07 15:08:56.137790+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd81956692a85'
down_revision = '49c84980092c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bookmarks',
    sa.Column('id', sa.String(length=36), nullable=False, comment='Bookmark unique identifier'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='Owner user ID'),
    sa.Column('document_id', sa.String(length=36), nullable=False, comment='Associated document ID'),
    sa.Column('chunk_id', sa.String(length=36), nullable=True, comment='Associated chunk ID'),
    sa.Column('selected_text', sa.Text(), nullable=False, comment='User-selected text content'),
    sa.Column('page_number', sa.Integer(), nullable=False, comment='Page number where bookmark is located'),
    sa.Column('position_x', sa.Float(), nullable=False, comment='X coordinate of selection'),
    sa.Column('position_y', sa.Float(), nullable=False, comment='Y coordinate of selection'),
    sa.Column('position_width', sa.Float(), nullable=False, comment='Width of selection'),
    sa.Column('position_height', sa.Float(), nullable=False, comment='Height of selection'),
    sa.Column('ai_summary', sa.Text(), nullable=False, comment='AI-generated bookmark summary'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='Bookmark title'),
    sa.Column('user_notes', sa.Text(), nullable=True, comment="User's additional notes"),
    sa.Column('conversation_context', sa.JSON(), nullable=True, comment='Associated conversation history'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='User-defined tags'),
    sa.Column('color', sa.String(length=7), nullable=False, comment='Highlight color (hex)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['chunk_id'], ['chunks.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bookmarks_page', 'bookmarks', ['document_id', 'page_number'], unique=False)
    op.create_index('idx_bookmarks_user_document', 'bookmarks', ['user_id', 'document_id'], unique=False)
    op.create_index(op.f('ix_bookmarks_chunk_id'), 'bookmarks', ['chunk_id'], unique=False)
    op.create_index(op.f('ix_bookmarks_document_id'), 'bookmarks', ['document_id'], unique=False)
    op.create_index(op.f('ix_bookmarks_page_number'), 'bookmarks', ['page_number'], unique=False)
    op.create_index(op.f('ix_bookmarks_user_id'), 'bookmarks', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bookmarks_user_id'), table_name='bookmarks')
    op.drop_index(op.f('ix_bookmarks_page_number'), table_name='bookmarks')
    op.drop_index(op.f('ix_bookmarks_document_id'), table_name='bookmarks')
    op.drop_index(op.f('ix_bookmarks_chunk_id'), table_name='bookmarks')
    op.drop_index('idx_bookmarks_user_document', table_name='bookmarks')
    op.drop_index('idx_bookmarks_page', table_name='bookmarks')
    op.drop_table('bookmarks')
    # ### end Alembic commands ###
